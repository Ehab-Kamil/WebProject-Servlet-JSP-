package HibernateEntity;
// Generated Mar 30, 2016 6:51:31 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name="product"
    ,catalog="web_project"
)
public class Product  implements java.io.Serializable {


     private Integer idproduct;
     private Categories categories;
     private String productName;
     private Float productPrice;
     private String productDescription;
     private Integer productCount;
     private String productImg;
     private byte[] image;
     private Integer productQuntityavailable;
     private Integer productQuntitysold;
     private Date productLastmodify;
     private String productOptions;
     private Set cartProducts = new HashSet(0);

    public Product() {
    }

	
    public Product(Categories categories, String productName) {
        this.categories = categories;
        this.productName = productName;
    }
    public Product(Categories categories, String productName, Float productPrice, String productDescription, Integer productCount, String productImg, byte[] image, Integer productQuntityavailable, Integer productQuntitysold, Date productLastmodify, String productOptions, Set cartProducts) {
       this.categories = categories;
       this.productName = productName;
       this.productPrice = productPrice;
       this.productDescription = productDescription;
       this.productCount = productCount;
       this.productImg = productImg;
       this.image = image;
       this.productQuntityavailable = productQuntityavailable;
       this.productQuntitysold = productQuntitysold;
       this.productLastmodify = productLastmodify;
       this.productOptions = productOptions;
       this.cartProducts = cartProducts;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idproduct", unique=true, nullable=false)
    public Integer getIdproduct() {
        return this.idproduct;
    }
    
    public void setIdproduct(Integer idproduct) {
        this.idproduct = idproduct;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="categories_idcategory", nullable=false)
    public Categories getCategories() {
        return this.categories;
    }
    
    public void setCategories(Categories categories) {
        this.categories = categories;
    }

    
    @Column(name="product_name", nullable=false, length=45)
    public String getProductName() {
        return this.productName;
    }
    
    public void setProductName(String productName) {
        this.productName = productName;
    }

    
    @Column(name="product_price", precision=12, scale=0)
    public Float getProductPrice() {
        return this.productPrice;
    }
    
    public void setProductPrice(Float productPrice) {
        this.productPrice = productPrice;
    }

    
    @Column(name="product_description", length=65535)
    public String getProductDescription() {
        return this.productDescription;
    }
    
    public void setProductDescription(String productDescription) {
        this.productDescription = productDescription;
    }

    
    @Column(name="product_count")
    public Integer getProductCount() {
        return this.productCount;
    }
    
    public void setProductCount(Integer productCount) {
        this.productCount = productCount;
    }

    
    @Column(name="product_img", length=150)
    public String getProductImg() {
        return this.productImg;
    }
    
    public void setProductImg(String productImg) {
        this.productImg = productImg;
    }

    
    @Column(name="Image")
    public byte[] getImage() {
        return this.image;
    }
    
    public void setImage(byte[] image) {
        this.image = image;
    }

    
    @Column(name="product_quntityavailable")
    public Integer getProductQuntityavailable() {
        return this.productQuntityavailable;
    }
    
    public void setProductQuntityavailable(Integer productQuntityavailable) {
        this.productQuntityavailable = productQuntityavailable;
    }

    
    @Column(name="product_quntitysold")
    public Integer getProductQuntitysold() {
        return this.productQuntitysold;
    }
    
    public void setProductQuntitysold(Integer productQuntitysold) {
        this.productQuntitysold = productQuntitysold;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="product_lastmodify", length=10)
    public Date getProductLastmodify() {
        return this.productLastmodify;
    }
    
    public void setProductLastmodify(Date productLastmodify) {
        this.productLastmodify = productLastmodify;
    }

    
    @Column(name="product_options", length=45)
    public String getProductOptions() {
        return this.productOptions;
    }
    
    public void setProductOptions(String productOptions) {
        this.productOptions = productOptions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="product")
    public Set getCartProducts() {
        return this.cartProducts;
    }
    
    public void setCartProducts(Set cartProducts) {
        this.cartProducts = cartProducts;
    }




}


